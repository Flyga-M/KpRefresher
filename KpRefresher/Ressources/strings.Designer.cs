//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KpRefresher.Ressources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KpRefresher.Ressources.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error.
        /// </summary>
        internal static string BusinessService_Error {
            get {
                return ResourceManager.GetString("BusinessService_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refreshed.
        /// </summary>
        internal static string BusinessService_Refreshed {
            get {
                return ResourceManager.GetString("BusinessService_Refreshed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refresh not available.
        /// </summary>
        internal static string BusinessService_RefreshNotAvailable {
            get {
                return ResourceManager.GetString("BusinessService_RefreshNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel notification for next refresh.
        /// </summary>
        internal static string CornerIcon_CancelNotify {
            get {
                return ResourceManager.GetString("CornerIcon_CancelNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Copy KillProof.me Id to clipboard.
        /// </summary>
        internal static string CornerIcon_Copy {
            get {
                return ResourceManager.GetString("CornerIcon_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notify when refresh available.
        /// </summary>
        internal static string CornerIcon_Notify {
            get {
                return ResourceManager.GetString("CornerIcon_Notify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open KillProof.me website.
        /// </summary>
        internal static string CornerIcon_OpenWebsite {
            get {
                return ResourceManager.GetString("CornerIcon_OpenWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refresh KillProof.me data.
        /// </summary>
        internal static string CornerIcon_Refresh {
            get {
                return ResourceManager.GetString("CornerIcon_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bank.
        /// </summary>
        internal static string GW2APIService_Bank {
            get {
                return ResourceManager.GetString("GW2APIService_Bank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shared Slots.
        /// </summary>
        internal static string GW2APIService_SharedSlots {
            get {
                return ResourceManager.GetString("GW2APIService_SharedSlots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fetching Api Data.
        /// </summary>
        internal static string LoadingSpinner_Fetch {
            get {
                return ResourceManager.GetString("LoadingSpinner_Fetch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] Error while getting Account name from GW2 API.\nPlease retry later..
        /// </summary>
        internal static string Notification_AccountNameFetchError {
            get {
                return ResourceManager.GetString("Notification_AccountNameFetchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] Id copied to clipboard!.
        /// </summary>
        internal static string Notification_CopiedToClipboard {
            get {
                return ResourceManager.GetString("Notification_CopiedToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] KillProof.me data not available\nPlease retry later..
        /// </summary>
        internal static string Notification_DataNotAvailable {
            get {
                return ResourceManager.GetString("Notification_DataNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] Refresh failed : please allow anonymous refresh\nin your KillProof.me settings.
        /// </summary>
        internal static string Notification_KpAccountAnonymous {
            get {
                return ResourceManager.GetString("Notification_KpAccountAnonymous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] KillProof.me Id {0} does not exist!.
        /// </summary>
        internal static string Notification_KpAccountUnknown {
            get {
                return ResourceManager.GetString("Notification_KpAccountUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] Error while loading KillProof.me profile.\nPlease retry later..
        /// </summary>
        internal static string Notification_KPProfileFetchError {
            get {
                return ResourceManager.GetString("Notification_KPProfileFetchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] Next refresh available in {0} minute{1}.
        /// </summary>
        internal static string Notification_NextRefreshAvailableIn {
            get {
                return ResourceManager.GetString("Notification_NextRefreshAvailableIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] No new clear validating settings, refresh aborted!.
        /// </summary>
        internal static string Notification_NoClearRefreshAborted {
            get {
                return ResourceManager.GetString("Notification_NoClearRefreshAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] You will be notified when next refresh is available,\nin approx. {0} minute{1}..
        /// </summary>
        internal static string Notification_NotifyScheduled {
            get {
                return ResourceManager.GetString("Notification_NotifyScheduled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] Next refresh is available!.
        /// </summary>
        internal static string Notification_RefreshAvailable {
            get {
                return ResourceManager.GetString("Notification_RefreshAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] KillProof.me refresh was not available\nPlease retry later..
        /// </summary>
        internal static string Notification_RefreshNotAvailable {
            get {
                return ResourceManager.GetString("Notification_RefreshNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] KillProof.me refresh was not available\nAuto-retry in 5 minutes..
        /// </summary>
        internal static string Notification_RefreshNotAvailableRetry {
            get {
                return ResourceManager.GetString("Notification_RefreshNotAvailableRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] KillProof.me refresh successful!.
        /// </summary>
        internal static string Notification_RefreshOk {
            get {
                return ResourceManager.GetString("Notification_RefreshOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0]\nA new try has been scheduled..
        /// </summary>
        internal static string Notification_TryScheduled {
            get {
                return ResourceManager.GetString("Notification_TryScheduled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [KpRefresher] Instance exit detected, refresh scheduled in {0} minute{1}.
        /// </summary>
        internal static string Notiication_InstanceExitDetected {
            get {
                return ResourceManager.GetString("Notiication_InstanceExitDetected", resourceCulture);
            }
        }
    }
}
